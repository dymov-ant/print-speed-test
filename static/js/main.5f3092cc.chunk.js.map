{"version":3,"sources":["reportWebVitals.ts","components/Symbol.tsx","redux/actions.ts","services/http.ts","components/Spinner.tsx","components/Text.tsx","components/Statistics.tsx","components/StartWindow.tsx","App.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Symbol","char","active","error","success","className","CREATE_SYMBOLS","SET_ACTIVE_INDEX","SET_ERROR_INDEX","ADD_INDEX_TO_ERRORS","SET_START","RESTART","SET_IS_LOADING","createSymbols","text","type","setErrorIndex","errorIndex","setIsLoading","isLoading","http","url","a","fetch","response","json","Spinner","Text","symbols","useSelector","state","activeIndex","errors","dispatch","useDispatch","keyPressHandler","event","length","alert","key","setActiveIndex","includes","index","useEffect","data","request","document","addEventListener","removeEventListener","style","width","map","Statistics","useState","time","setTime","errorsCount","symbolsCount","truth","speed","Math","floor","timer","setInterval","clearInterval","fontSize","toFixed","onClick","onMouseDown","preventDefault","StartWindow","height","margin","isStart","App","initialState","createStore","action","split","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.5f3092cc.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FC } from \"react\"\n\ninterface ISymbolProps {\n    char: string\n    active: boolean\n    error: boolean\n    success: boolean\n}\n\nexport const Symbol: FC<ISymbolProps> = ({ char, active, error, success }) => {\n    return (\n        <span className={\n            error\n                ? \"bg-danger text-white p-1 rounded-2\"\n                : active\n                    ? \"bg-success text-white p-1 rounded-2\"\n                    : success\n                        ? \"text-success\"\n                        : \"text-dark\"\n        }\n        >\n            {char}\n        </span>\n    )\n}","export const CREATE_SYMBOLS = \"CREATE_SYMBOLS\"\nexport const SET_ACTIVE_INDEX = \"SET_ACTIVE_INDEX\"\nexport const SET_ERROR_INDEX = \"SET_ERROR_INDEX\"\nexport const ADD_INDEX_TO_ERRORS = \"ADD_INDEX_TO_ERRORS\"\nexport const SET_START = \"SET_START\"\nexport const RESTART = \"RESTART\"\nexport const SET_IS_LOADING = \"SET_IS_LOADING\"\n\ninterface ICreateSymbols {\n    type: typeof CREATE_SYMBOLS\n    text: string\n}\n\ninterface ISetActiveIndex {\n    type: typeof SET_ACTIVE_INDEX\n    activeIndex: number\n}\n\ninterface ISetErrorIndex {\n    type: typeof SET_ERROR_INDEX\n    errorIndex: number | null\n}\n\ninterface IAddIndexToErrors {\n    type: typeof ADD_INDEX_TO_ERRORS\n    index: number\n}\n\ninterface ISetStart {\n    type: typeof SET_START\n    isStart: boolean\n}\n\ninterface IRestart {\n    type: typeof RESTART\n}\n\ninterface ISetIsLoading {\n    type: typeof SET_IS_LOADING\n    isLoading: boolean\n}\n\nexport type ActionsTypes =\n    ICreateSymbols\n    | ISetActiveIndex\n    | ISetErrorIndex\n    | IAddIndexToErrors\n    | ISetStart\n    | IRestart\n    | ISetIsLoading\n\nexport const createSymbols = (text: string): ICreateSymbols => ({\n    type: CREATE_SYMBOLS,\n    text\n})\n\nexport const setActiveIndex = (activeIndex: number): ISetActiveIndex => ({\n    type: SET_ACTIVE_INDEX,\n    activeIndex\n})\n\nexport const setErrorIndex = (errorIndex: number | null): ISetErrorIndex => ({\n    type: SET_ERROR_INDEX,\n    errorIndex\n})\n\nexport const addIndexToErrors = (index: number): IAddIndexToErrors => ({\n    type: ADD_INDEX_TO_ERRORS,\n    index\n})\n\nexport const setStart = (isStart: boolean): ISetStart => ({\n    type: SET_START,\n    isStart\n})\n\nexport const restart = (): IRestart => ({\n    type: RESTART\n})\n\nexport const setIsLoading = (isLoading: boolean): ISetIsLoading => ({\n    type: SET_IS_LOADING,\n    isLoading\n})","export async function http<T>(url: string): Promise<T> {\n    const response = await fetch(url)\n    return await response.json()\n}","import { FC } from \"react\"\n\nexport const Spinner: FC = () => {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center h-100\">\n            <p className=\"display-6\">Загрузка...</p>\n        </div>\n    )\n}","import { FC, useEffect } from \"react\"\nimport { Symbol } from \"./Symbol\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppStateType } from \"../redux/store\"\nimport { addIndexToErrors, createSymbols, setActiveIndex, setErrorIndex, setIsLoading } from \"../redux/actions\"\nimport { http } from \"../services/http\"\nimport { Spinner } from \"./Spinner\"\n\nexport interface IResponse {\n    status: string\n    text: string\n}\n\nexport const Text: FC = () => {\n    const symbols = useSelector((state: AppStateType) => state.symbols)\n    const activeIndex = useSelector((state: AppStateType) => state.activeIndex)\n    const errorIndex = useSelector((state: AppStateType) => state.errorIndex)\n    const errors = useSelector((state: AppStateType) => state.errors)\n    const isLoading = useSelector((state: AppStateType) => state.isLoading)\n    const dispatch = useDispatch()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const keyPressHandler = (event: KeyboardEvent) => {\n        if (activeIndex === symbols.length - 1) {\n            alert(\"Финиш\")\n        }\n        if (event.key !== \"Shift\" && event.key !== \"Backspace\" && event.key !== \"Escape\" && event.key !== \"Alt\" && event.key !== \"Control\") {\n            if (event.key === symbols[activeIndex]) {\n                dispatch(setActiveIndex(activeIndex + 1))\n                dispatch(setErrorIndex(null))\n            } else {\n                dispatch(setErrorIndex(activeIndex))\n                if (!errors.includes(activeIndex)) {\n                    dispatch(addIndexToErrors(activeIndex))\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        async function request() {\n            dispatch(setIsLoading(true))\n            const data = await http<IResponse>(\"https://fish-text.ru/get\")\n            dispatch(setIsLoading(false))\n            dispatch(createSymbols(data.text))\n        }\n        request()\n    }, [])\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", keyPressHandler)\n        return () => document.removeEventListener(\"keydown\", keyPressHandler)\n    }, [keyPressHandler])\n\n    return (\n        <p className=\"fs-5 me-4 d-block\" style={{ width: \"730px\" }}>\n            {\n                isLoading\n                    ? <Spinner/>\n                    : symbols.map((char, index) =>\n                        <Symbol\n                            key={index}\n                            char={char}\n                            active={activeIndex === index}\n                            error={errorIndex === index}\n                            success={activeIndex > index}\n                        />\n                    )\n            }\n        </p>\n    )\n}","import { FC, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppStateType } from \"../redux/store\"\nimport { restart } from \"../redux/actions\"\n\nexport const Statistics: FC = () => {\n    const [time, setTime] = useState(1)\n    const activeIndex = useSelector((state: AppStateType) => state.activeIndex)\n    const errorsCount = useSelector((state: AppStateType) => state.errors.length)\n    const symbolsCount = useSelector((state: AppStateType) => state.symbols.length)\n    const isLoading = useSelector((state: AppStateType) => state.isLoading)\n    const truth = (symbolsCount - errorsCount) / symbolsCount * 100\n    const speed = Math.floor(activeIndex / time * 60)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (!isLoading) {\n                setTime(time + 1)\n            }\n        }, 1000)\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [time])\n\n    const onRestart = () => {\n        dispatch(restart())\n        setTime(1)\n    }\n\n    return (\n        <div className=\"border-start border-2 ps-2\" style={{ width: \"130px\" }}>\n            <div className=\"mb-2\">\n                <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                    <i className=\"fas fa-tachometer-alt me-1\"/> Скорость\n                </div>\n                <div className=\"text-info\">\n                    <span className=\"me-1\" style={{ fontSize: \"1.9rem\" }}>{speed}</span>\n                    <span style={{ fontSize: \"0.9rem\" }}>зн./мин.</span>\n                </div>\n            </div>\n            <div className=\"mb-2\">\n                <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                    <i className=\"fas fa-bullseye\"/> Точность\n                </div>\n                <div className=\"text-info\">\n                    <span className=\"me-1\" style={{ fontSize: \"2rem\" }}>\n                        {\n                            truth < 0 ? 0 : truth === 100 ? truth : truth.toFixed(1)\n                        }\n                    </span>\n                    <span style={{ fontSize: \"0.9rem\" }}>%</span>\n                </div>\n            </div>\n            <button\n                onClick={onRestart}\n                onMouseDown={event => event.preventDefault()}\n                className=\"btn btn-outline-primary\"\n            >\n                Заново\n            </button>\n        </div>\n    )\n}","import { FC } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setStart } from \"../redux/actions\"\n\nexport const StartWindow: FC = () => {\n    const dispatch = useDispatch()\n    const onStartHandler = () => {\n        dispatch(setStart(true))\n    }\n\n    return (\n        <div\n            className=\"position-absolute top-0 end-0 bottom-0 start-0 bg-white d-flex flex-column justify-content-center align-items-center p-3 rounded-3 shadow\"\n            style={{ width: \"450px\", height: \"100px\", margin: \"auto\" }}\n        >\n            <h5>Приготовьтесь и нажмите \"Начать!\"</h5>\n            <button className=\"btn btn-outline-primary\" onClick={onStartHandler}>\n                Начать!\n            </button>\n        </div>\n    )\n}","import React, { FC } from \"react\"\nimport { Text } from \"./components/Text\"\nimport { Statistics } from \"./components/Statistics\"\nimport { useSelector } from \"react-redux\"\nimport { AppStateType } from \"./redux/store\"\nimport { StartWindow } from \"./components/StartWindow\"\n\nexport const App: FC = () => {\n    const isStart = useSelector((state: AppStateType) => state.isStart)\n\n    if (!isStart) {\n        return (\n            <div className=\"bg-info position-relative vh-100\">\n                <StartWindow/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"vh-100 bg-info\">\n            <div className=\"container d-flex justify-content-center pt-5\">\n                <div className=\"d-flex justify-content-between bg-white rounded-3 p-5\">\n                    <Text/>\n                    <Statistics/>\n                </div>\n            </div>\n        </div>\n    )\n}","import {\n    ActionsTypes,\n    ADD_INDEX_TO_ERRORS,\n    CREATE_SYMBOLS,\n    RESTART,\n    SET_ACTIVE_INDEX,\n    SET_ERROR_INDEX,\n    SET_IS_LOADING,\n    SET_START\n} from \"./actions\"\n\ninterface IRootState {\n    symbols: string[]\n    activeIndex: number\n    errorIndex: number | null\n    errors: number[]\n    isStart: boolean\n    isLoading: boolean\n}\n\nconst initialState: IRootState = {\n    symbols: [],\n    activeIndex: 0,\n    errorIndex: null,\n    errors: [],\n    isStart: false,\n    isLoading: false\n}\n\nexport const rootReducer = (state = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case CREATE_SYMBOLS:\n            return {\n                ...state,\n                symbols: action.text.split(\"\")\n            }\n        case SET_ACTIVE_INDEX:\n            return {\n                ...state,\n                activeIndex: action.activeIndex\n            }\n        case SET_ERROR_INDEX:\n            return {\n                ...state,\n                errorIndex: action.errorIndex\n            }\n        case ADD_INDEX_TO_ERRORS:\n            return {\n                ...state,\n                errors: [...state.errors, action.index]\n            }\n        case SET_START:\n            return {\n                ...state,\n                isStart: action.isStart\n            }\n        case RESTART:\n            return {\n                ...state,\n                activeIndex: 0,\n                errorIndex: null,\n                errors: []\n            }\n        case SET_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading\n            }\n        default:\n            return state\n    }\n}","import { createStore } from \"redux\"\nimport {rootReducer} from \"./reducer\"\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport default createStore(rootReducer)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { Provider } from \"react-redux\"\nimport { App } from \"./App\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}