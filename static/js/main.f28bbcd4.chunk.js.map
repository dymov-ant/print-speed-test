{"version":3,"sources":["reportWebVitals.ts","components/Symbol.tsx","redux/actions.ts","components/Text.tsx","components/Statistics.tsx","components/StartWindow.tsx","App.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Symbol","char","active","error","success","className","CREATE_SYMBOLS","SET_ACTIVE_INDEX","SET_ERROR_INDEX","ADD_ERRORS_COUNT","SET_START","RESTART","setErrorIndex","errorIndex","type","Text","symbols","useSelector","state","activeIndex","dispatch","useDispatch","keyPressHandler","event","length","alert","key","setActiveIndex","useEffect","document","addEventListener","removeEventListener","style","width","map","index","Statistics","useState","time","setTime","errorsCount","symbolsCount","timer","setInterval","clearInterval","fontSize","Math","floor","onClick","onMouseDown","preventDefault","StartWindow","height","margin","isStart","App","data","text","initialState","createStore","action","split","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.f28bbcd4.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FC } from \"react\"\n\ninterface ISymbolProps {\n    char: string\n    active: boolean\n    error: boolean\n    success: boolean\n}\n\nexport const Symbol: FC<ISymbolProps> = ({ char, active, error, success }) => {\n    return (\n        <span className={\n            error\n                ? \"bg-danger text-white p-1 rounded-2\"\n                : active\n                    ? \"bg-success text-white p-1 rounded-2\"\n                    : success\n                        ? \"text-success\"\n                        : \"text-dark\"\n        }\n        >\n            {char}\n        </span>\n    )\n}","export const CREATE_SYMBOLS = \"CREATE_SYMBOLS\"\nexport const SET_ACTIVE_INDEX = \"SET_ACTIVE_INDEX\"\nexport const SET_ERROR_INDEX = \"SET_ERROR_INDEX\"\nexport const ADD_ERRORS_COUNT = \"ADD_ERRORS_COUNT\"\nexport const SET_START = \"SET_START\"\nexport const RESTART = \"RESTART\"\n\ninterface ICreateSymbols {\n    type: typeof CREATE_SYMBOLS\n    text: string\n}\n\ninterface ISetActiveIndex {\n    type: typeof SET_ACTIVE_INDEX\n    activeIndex: number\n}\n\ninterface ISetErrorIndex {\n    type: typeof SET_ERROR_INDEX\n    errorIndex: number | null\n}\n\ninterface IAddErrorsCount {\n    type: typeof ADD_ERRORS_COUNT\n}\n\ninterface ISetStart {\n    type: typeof SET_START\n    isStart: boolean\n}\n\ninterface IRestart {\n    type: typeof RESTART\n}\n\nexport type ActionsTypes = ICreateSymbols | ISetActiveIndex | ISetErrorIndex | IAddErrorsCount | ISetStart | IRestart\n\nexport const createSymbols = (text: string): ICreateSymbols => ({\n    type: CREATE_SYMBOLS,\n    text\n})\n\nexport const setActiveIndex = (activeIndex: number): ISetActiveIndex => ({\n    type: SET_ACTIVE_INDEX,\n    activeIndex\n})\n\nexport const setErrorIndex = (errorIndex: number | null): ISetErrorIndex => ({\n    type: SET_ERROR_INDEX,\n    errorIndex\n})\n\nexport const addErrorsCount = (): IAddErrorsCount => ({\n    type: ADD_ERRORS_COUNT\n})\n\nexport const setStart = (isStart: boolean): ISetStart => ({\n    type: SET_START,\n    isStart\n})\n\nexport const restart = (): IRestart => ({\n    type: RESTART\n})","import { FC, useEffect } from \"react\"\nimport { Symbol } from \"./Symbol\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppStateType } from \"../redux/store\"\nimport { addErrorsCount, setActiveIndex, setErrorIndex } from \"../redux/actions\"\n\nexport const Text: FC = () => {\n    const symbols = useSelector((state: AppStateType) => state.symbols)\n    const activeIndex = useSelector((state: AppStateType) => state.activeIndex)\n    const errorIndex = useSelector((state: AppStateType) => state.errorIndex)\n    const dispatch = useDispatch()\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const keyPressHandler = (event: KeyboardEvent) => {\n        if (activeIndex === symbols.length - 1) {\n            alert(\"Финиш\")\n        }\n        if (event.key !== \"Shift\" && event.key !== \"Backspace\" && event.key !== \"Escape\" && event.key !== \"Alt\" && event.key !== \"Control\") {\n            if (event.key === symbols[activeIndex]) {\n                dispatch(setActiveIndex(activeIndex + 1))\n                dispatch(setErrorIndex(null))\n            } else {\n                dispatch(setErrorIndex(activeIndex))\n                dispatch(addErrorsCount())\n            }\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", keyPressHandler)\n        return () => document.removeEventListener(\"keydown\", keyPressHandler)\n    }, [keyPressHandler])\n\n    return (\n        <p className=\"fs-5 me-4 d-block\" style={{width: \"730px\"}}>\n            {\n                symbols.map((char, index) =>\n                    <Symbol\n                        key={index}\n                        char={char}\n                        active={activeIndex === index}\n                        error={errorIndex === index}\n                        success={activeIndex > index}\n                    />\n                )\n            }\n        </p>\n    )\n}","import { FC, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppStateType } from \"../redux/store\"\nimport { restart } from \"../redux/actions\"\n\nexport const Statistics: FC = () => {\n    const [time, setTime] = useState(1)\n    const activeIndex = useSelector((state: AppStateType) => state.activeIndex)\n    const errorsCount = useSelector((state: AppStateType) => state.errorsCount)\n    const symbolsCount = useSelector((state: AppStateType) => state.symbols.length)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setTime(time + 1)\n        }, 1000)\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [time])\n\n    const onRestart = () => {\n        dispatch(restart())\n    }\n\n    return (\n        <div className=\"border-start border-2 ps-2\" style={{ width: \"130px\" }}>\n            <div className=\"mb-2\">\n                <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                    <i className=\"fas fa-tachometer-alt me-1\"/> Скорость\n                </div>\n                <div className=\"text-info\">\n                    <span className=\"me-1\" style={{ fontSize: \"1.9rem\" }}>{Math.floor(activeIndex / time * 60)}</span>\n                    <span style={{ fontSize: \"0.9rem\" }}>зн./мин.</span>\n                </div>\n            </div>\n            <div className=\"mb-2\">\n                <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                    <i className=\"fas fa-bullseye\"/> Точность\n                </div>\n                <div className=\"text-info\">\n                    <span className=\"me-1\"\n                          style={{ fontSize: \"2rem\" }}>{Math.floor((symbolsCount - errorsCount) / symbolsCount * 100)}</span>\n                    <span style={{ fontSize: \"0.9rem\" }}>%</span>\n                </div>\n            </div>\n            <button\n                onClick={onRestart}\n                onMouseDown={event => event.preventDefault()}\n                className=\"btn btn-outline-primary\"\n            >\n                Заново\n            </button>\n        </div>\n    )\n}","import { FC } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setStart } from \"../redux/actions\"\n\nexport const StartWindow: FC = () => {\n    const dispatch = useDispatch()\n    const onStartHandler = () => {\n        dispatch(setStart(true))\n    }\n\n    return (\n        <div\n            className=\"position-absolute top-0 end-0 bottom-0 start-0 bg-white d-flex flex-column justify-content-center align-items-center p-3 rounded-3 shadow\"\n            style={{ width: \"450px\", height: \"100px\", margin: \"auto\" }}\n        >\n            <h5>Приготовтесь и нажмите \"Начать\"!</h5>\n            <button className=\"btn btn-outline-primary\" onClick={onStartHandler}>\n                Начать!\n            </button>\n        </div>\n    )\n}","import React, { FC, useEffect } from \"react\"\nimport { Text } from \"./components/Text\"\nimport { Statistics } from \"./components/Statistics\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { createSymbols } from \"./redux/actions\"\nimport { AppStateType } from \"./redux/store\"\nimport { StartWindow } from \"./components/StartWindow\"\n\nexport const App: FC = () => {\n    const dispatch = useDispatch()\n    const data = \"Давно выяснено, что при оценке дизайна. Давно выяснено, что при оценке дизайна. Давно выяснено, что при оценке дизайна. Давно выяснено, что при оценке дизайна. Давно выяснено, что при оценке дизайна. Давно выяснено, что при оценке дизайна.\"\n    const isStart = useSelector((state: AppStateType) => state.isStart)\n    useEffect(() => {\n        dispatch(createSymbols(data))\n    }, [data])\n\n    if (!isStart) {\n        return (\n            <div className=\"bg-info position-relative vh-100\">\n                <StartWindow/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"vh-100 bg-info\">\n            <div className=\"container d-flex justify-content-center pt-5\">\n                <div className=\"d-flex justify-content-between bg-white rounded-3 p-5\">\n                    <Text/>\n                    <Statistics/>\n                </div>\n            </div>\n        </div>\n    )\n}","import {\n    ActionsTypes,\n    ADD_ERRORS_COUNT,\n    CREATE_SYMBOLS,\n    RESTART,\n    SET_ACTIVE_INDEX,\n    SET_ERROR_INDEX,\n    SET_START\n} from \"./actions\"\n\ninterface IRootState {\n    symbols: string[]\n    activeIndex: number\n    errorIndex: number | null\n    errorsCount: number\n    isStart: boolean\n}\n\nconst initialState: IRootState = {\n    symbols: [],\n    activeIndex: 0,\n    errorIndex: null,\n    errorsCount: 0,\n    isStart: false\n}\n\nexport const rootReducer = (state = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case CREATE_SYMBOLS:\n            return {\n                ...state,\n                symbols: action.text.split(\"\")\n            }\n        case SET_ACTIVE_INDEX:\n            return {\n                ...state,\n                activeIndex: action.activeIndex\n            }\n        case SET_ERROR_INDEX:\n            return {\n                ...state,\n                errorIndex: action.errorIndex\n            }\n        case ADD_ERRORS_COUNT:\n            return {\n                ...state,\n                errorsCount: state.errorsCount + 1\n            }\n        case SET_START:\n            return {\n                ...state,\n                isStart: action.isStart\n            }\n        case RESTART:\n            return {\n                ...state,\n                activeIndex: 0,\n                errorIndex: null,\n                errorsCount: 0\n            }\n        default:\n            return state\n    }\n}","import { createStore } from \"redux\"\nimport {rootReducer} from \"./reducer\"\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport default createStore(rootReducer)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { Provider } from \"react-redux\"\nimport { App } from \"./App\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}