{"version":3,"sources":["reportWebVitals.ts","components/Symbol.tsx","redux/actions.ts","services/http.ts","components/Spinner.tsx","components/Text.tsx","components/Statistics.tsx","components/StartFinish.tsx","App.tsx","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Symbol","char","active","error","success","className","CREATE_SYMBOLS","SET_ACTIVE_INDEX","SET_ERROR_INDEX","ADD_INDEX_TO_ERRORS","SET_START","SET_IS_LOADING","SET_FINISH","SET_RESULT","createSymbols","text","type","setErrorIndex","errorIndex","setIsLoading","isLoading","http","url","a","fetch","response","json","Spinner","Text","symbols","useSelector","state","activeIndex","errors","dispatch","useDispatch","DISABLE_KEYS","keyPressHandler","event","includes","key","length","setActiveIndex","index","useEffect","data","request","document","addEventListener","removeEventListener","style","width","map","Statistics","useState","time","setTime","errorsCount","symbolsCount","truth","speed","Math","floor","timer","setInterval","result","clearInterval","fontSize","toFixed","href","tabIndex","StartFinish","isFinish","height","margin","onClick","isStart","App","initialState","createStore","action","split","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.a539aed1.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FC } from \"react\"\n\ninterface ISymbolProps {\n    char: string\n    active: boolean\n    error: boolean\n    success: boolean\n}\n\nexport const Symbol: FC<ISymbolProps> = ({ char, active, error, success }) => {\n    return (\n        <span className={\n            error\n                ? \"bg-danger text-white p-1 rounded-2\"\n                : active\n                    ? \"bg-success text-white p-1 rounded-2\"\n                    : success\n                        ? \"text-success\"\n                        : \"text-dark\"\n        }\n        >\n            {char}\n        </span>\n    )\n}","import { IResult } from \"./reducer\"\n\nexport const CREATE_SYMBOLS = \"CREATE_SYMBOLS\"\nexport const SET_ACTIVE_INDEX = \"SET_ACTIVE_INDEX\"\nexport const SET_ERROR_INDEX = \"SET_ERROR_INDEX\"\nexport const ADD_INDEX_TO_ERRORS = \"ADD_INDEX_TO_ERRORS\"\nexport const SET_START = \"SET_START\"\nexport const SET_IS_LOADING = \"SET_IS_LOADING\"\nexport const SET_FINISH = \"SET_FINISH\"\nexport const SET_RESULT = \"SET_RESULT\"\n\ninterface ICreateSymbols {\n    type: typeof CREATE_SYMBOLS\n    text: string\n}\n\ninterface ISetActiveIndex {\n    type: typeof SET_ACTIVE_INDEX\n    activeIndex: number\n}\n\ninterface ISetErrorIndex {\n    type: typeof SET_ERROR_INDEX\n    errorIndex: number | null\n}\n\ninterface IAddIndexToErrors {\n    type: typeof ADD_INDEX_TO_ERRORS\n    index: number\n}\n\ninterface ISetStart {\n    type: typeof SET_START\n    isStart: boolean\n}\n\ninterface ISetIsLoading {\n    type: typeof SET_IS_LOADING\n    isLoading: boolean\n}\n\ninterface ISetFinish {\n    type: typeof SET_FINISH\n}\n\ninterface ISetResult {\n    type: typeof SET_RESULT\n    result: IResult\n}\n\nexport type ActionsTypes =\n    ICreateSymbols\n    | ISetActiveIndex\n    | ISetErrorIndex\n    | IAddIndexToErrors\n    | ISetStart\n    | ISetIsLoading\n    | ISetFinish\n    | ISetResult\n\nexport const createSymbols = (text: string): ICreateSymbols => ({\n    type: CREATE_SYMBOLS,\n    text\n})\n\nexport const setActiveIndex = (activeIndex: number): ISetActiveIndex => ({\n    type: SET_ACTIVE_INDEX,\n    activeIndex\n})\n\nexport const setErrorIndex = (errorIndex: number | null): ISetErrorIndex => ({\n    type: SET_ERROR_INDEX,\n    errorIndex\n})\n\nexport const addIndexToErrors = (index: number): IAddIndexToErrors => ({\n    type: ADD_INDEX_TO_ERRORS,\n    index\n})\n\nexport const setStart = (isStart: boolean): ISetStart => ({\n    type: SET_START,\n    isStart\n})\n\nexport const setIsLoading = (isLoading: boolean): ISetIsLoading => ({\n    type: SET_IS_LOADING,\n    isLoading\n})\n\nexport const finish = (): ISetFinish => ({\n    type: SET_FINISH\n})\n\nexport const setResult = (result: IResult): ISetResult => ({\n    type: SET_RESULT,\n    result\n})","export async function http<T>(url: string): Promise<T> {\n    const response = await fetch(url)\n    return await response.json()\n}","import { FC } from \"react\"\n\nexport const Spinner: FC = () => {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center h-100\">\n            <p className=\"display-6\">Загрузка...</p>\n        </div>\n    )\n}","import { FC, useEffect } from \"react\"\nimport { Symbol } from \"./Symbol\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppStateType } from \"../redux/store\"\nimport { addIndexToErrors, createSymbols, finish, setActiveIndex, setErrorIndex, setIsLoading } from \"../redux/actions\"\nimport { http } from \"../services/http\"\nimport { Spinner } from \"./Spinner\"\n\nexport interface IResponse {\n    status: string\n    text: string\n}\n\nexport const Text: FC = () => {\n    const symbols = useSelector((state: AppStateType) => state.symbols)\n    const activeIndex = useSelector((state: AppStateType) => state.activeIndex)\n    const errorIndex = useSelector((state: AppStateType) => state.errorIndex)\n    const errors = useSelector((state: AppStateType) => state.errors)\n    const isLoading = useSelector((state: AppStateType) => state.isLoading)\n    const dispatch = useDispatch()\n    const DISABLE_KEYS = [\n        \"Shift\",\n        \"Backspace\",\n        \"Escape\",\n        \"Alt\",\n        \"Control\",\n        \"Enter\",\n        \"Tab\",\n        \"CapsLock\",\n        \"ArrowDown\",\n        \"ArrowUp\",\n        \"ArrowRight\",\n        \"ArrowLeft\",\n        \"NumLock\",\n        \"Delete\",\n        \"PrintScreen\",\n        \"GroupNext\"\n    ]\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const keyPressHandler = (event: KeyboardEvent) => {\n        if (!DISABLE_KEYS.includes(event.key)) {\n            if (event.key === symbols[activeIndex]) {\n                if (activeIndex === symbols.length - 1) {\n                    dispatch(finish())\n                } else {\n                    dispatch(setActiveIndex(activeIndex + 1))\n                    dispatch(setErrorIndex(null))\n                }\n            } else {\n                dispatch(setErrorIndex(activeIndex))\n                if (!errors.includes(activeIndex)) {\n                    dispatch(addIndexToErrors(activeIndex))\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        async function request() {\n            dispatch(setIsLoading(true))\n            const data = await http<IResponse>(\"https://fish-text.ru/get\")\n            dispatch(setIsLoading(false))\n            dispatch(createSymbols(data.text))\n        }\n\n        request()\n    }, [])\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", keyPressHandler)\n        return () => document.removeEventListener(\"keydown\", keyPressHandler)\n    }, [keyPressHandler])\n\n    return (\n        <div className=\"fs-5 me-4 d-block\" style={{ width: \"730px\" }}>\n            {\n                isLoading\n                    ? <Spinner/>\n                    : symbols.map((char, index) =>\n                        <Symbol\n                            key={index}\n                            char={char}\n                            active={activeIndex === index}\n                            error={errorIndex === index}\n                            success={activeIndex > index}\n                        />\n                    )\n            }\n        </div>\n    )\n}","import { FC, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppStateType } from \"../redux/store\"\nimport { setResult } from \"../redux/actions\"\n\nexport const Statistics: FC = () => {\n    const [time, setTime] = useState(1)\n    const activeIndex = useSelector((state: AppStateType) => state.activeIndex)\n    const errorsCount = useSelector((state: AppStateType) => state.errors.length)\n    const symbolsCount = useSelector((state: AppStateType) => state.symbols.length)\n    const isLoading = useSelector((state: AppStateType) => state.isLoading)\n    const truth = (symbolsCount - errorsCount) / symbolsCount * 100 || 0\n    const speed = Math.floor(activeIndex / time * 60)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (!isLoading) {\n                dispatch(setResult({ speed, truth }))\n                setTime(time + 1)\n            }\n        }, 1000)\n\n        return () => {\n            clearInterval(timer)\n        }\n    }, [time])\n\n    return (\n        <div className=\"border-start border-2 ps-2\" style={{ width: \"130px\" }}>\n            <div className=\"mb-2\">\n                <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                    <i className=\"fas fa-tachometer-alt me-1\"/> Скорость\n                </div>\n                <div className=\"text-info\">\n                    <span className=\"me-1\" style={{ fontSize: \"2rem\" }}>{speed}</span>\n                    <span style={{ fontSize: \"0.9rem\" }}>зн./мин.</span>\n                </div>\n            </div>\n            <div className=\"mb-2\">\n                <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                    <i className=\"fas fa-bullseye\"/> Точность\n                </div>\n                <div className=\"text-info\">\n                    <span className=\"me-1\" style={{ fontSize: \"2rem\" }}>\n                        {truth && (truth < 0 ? 0 : (truth ^ 0) === truth ? truth : truth.toFixed(1))}\n                    </span>\n                    <span style={{ fontSize: \"0.9rem\" }}>%</span>\n                </div>\n            </div>\n            <a\n                href=\"/\"\n                tabIndex={-1}\n                className=\"btn btn-outline-primary\"\n            >\n                Заново\n            </a>\n        </div>\n    )\n}","import { FC } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { setStart } from \"../redux/actions\"\nimport { AppStateType } from \"../redux/store\"\n\nexport const StartFinish: FC = () => {\n    const isFinish = useSelector((state: AppStateType) => state.isFinish)\n    const result = useSelector((state: AppStateType) => state.result)\n    const dispatch = useDispatch()\n    const onStartHandler = () => {\n        dispatch(setStart(true))\n    }\n\n\n    return (\n        <div\n            className=\"position-absolute top-0 end-0 bottom-0 start-0 bg-white d-flex flex-column justify-content-center align-items-center p-3 rounded-3 shadow\"\n            style={{ width: \"600px\", height: \"300px\", margin: \"auto\" }}\n        >\n            {\n                (isFinish && result) && (\n                    <>\n                        <h4>Ваш результат:</h4>\n                        <div className=\"mb-2\">\n                            <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                                <i className=\"fas fa-tachometer-alt me-1\"/> Скорость\n                            </div>\n                            <div className=\"text-info\">\n                                <span className=\"me-1\" style={{ fontSize: \"1.9rem\" }}>{result.speed}</span>\n                                <span style={{ fontSize: \"0.9rem\" }}>зн./мин.</span>\n                            </div>\n                        </div>\n                        <div className=\"mb-2\">\n                            <div className=\"text-muted d-flex align-items-center text-uppercase\">\n                                <i className=\"fas fa-bullseye\"/> Точность\n                            </div>\n                            <div className=\"text-info\">\n                                <span className=\"me-1\" style={{ fontSize: \"2rem\" }}>\n                                    {(result.truth ^ 0) === result.truth ? result.truth : result.truth.toFixed(1)}\n                                </span>\n                                <span style={{ fontSize: \"0.9rem\" }}>%</span>\n                            </div>\n                        </div>\n                    </>\n                )\n            }\n            <h5>\n                {isFinish ? \"Чтобы попробывать еще раз нажмите \\\"Начать!\\\"\" : \"Приготовьтесь и нажмите \\\"Начать!\\\"\"}\n            </h5>\n            <button className=\"btn btn-outline-primary\" onClick={onStartHandler}>\n                Начать!\n            </button>\n        </div>\n    )\n}","import React, { FC } from \"react\"\nimport { Text } from \"./components/Text\"\nimport { Statistics } from \"./components/Statistics\"\nimport { useSelector } from \"react-redux\"\nimport { AppStateType } from \"./redux/store\"\nimport { StartFinish } from \"./components/StartFinish\"\n\nexport const App: FC = () => {\n    const isStart = useSelector((state: AppStateType) => state.isStart)\n    const isFinish = useSelector((state: AppStateType) => state.isFinish)\n\n    if (!isStart || isFinish) {\n        return (\n            <div className=\"bg-info position-relative vh-100\">\n                <StartFinish/>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"vh-100 bg-info user-select-none\">\n            <div className=\"container d-flex justify-content-center pt-5\">\n                <div className=\"d-flex justify-content-between bg-white rounded-3 p-5\">\n                    <Text/>\n                    <Statistics/>\n                </div>\n            </div>\n        </div>\n    )\n}","import {\n    ActionsTypes,\n    ADD_INDEX_TO_ERRORS,\n    CREATE_SYMBOLS,\n    SET_ACTIVE_INDEX,\n    SET_ERROR_INDEX,\n    SET_FINISH,\n    SET_IS_LOADING,\n    SET_RESULT,\n    SET_START\n} from \"./actions\"\n\nexport interface IResult {\n    speed: number\n    truth: number\n}\n\ninterface IRootState {\n    symbols: string[]\n    activeIndex: number\n    errorIndex: number | null\n    errors: number[]\n    isStart: boolean\n    isLoading: boolean\n    result: IResult | null\n    isFinish: boolean\n}\n\nconst initialState: IRootState = {\n    symbols: [],\n    activeIndex: 0,\n    errorIndex: null,\n    errors: [],\n    isStart: false,\n    isLoading: false,\n    result: null,\n    isFinish: false\n}\n\nexport const rootReducer = (state = initialState, action: ActionsTypes) => {\n    switch (action.type) {\n        case CREATE_SYMBOLS:\n            return {\n                ...state,\n                symbols: action.text.split(\"\")\n            }\n        case SET_ACTIVE_INDEX:\n            return {\n                ...state,\n                activeIndex: action.activeIndex\n            }\n        case SET_ERROR_INDEX:\n            return {\n                ...state,\n                errorIndex: action.errorIndex\n            }\n        case ADD_INDEX_TO_ERRORS:\n            return {\n                ...state,\n                errors: [...state.errors, action.index]\n            }\n        case SET_START:\n            return {\n                ...state,\n                isStart: action.isStart,\n                isFinish: false,\n                result: null\n            }\n        case SET_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading\n            }\n        case SET_FINISH:\n            return {\n                ...state,\n                symbols: [],\n                activeIndex: 0,\n                errorIndex: null,\n                errors: [],\n                isStart: false,\n                isFinish: true\n            }\n        case SET_RESULT:\n            return {\n                ...state,\n                result: action.result\n            }\n        default:\n            return state\n    }\n}","import { createStore } from \"redux\"\nimport {rootReducer} from \"./reducer\"\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nexport default createStore(rootReducer)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { Provider } from \"react-redux\"\nimport { App } from \"./App\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}